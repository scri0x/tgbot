from cgitb import text
import logging
from operator import contains
from re import IGNORECASE
from tracemalloc import stop
from aiogram import Bot, Dispatcher, executor, types
from aiogram.dispatcher.filters import Text
import sqlite3
conn = sqlite3.connect('databases/subjects.db')
cur = conn.cursor()

# –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
bot = Bot(token="5322427961:AAElTOBaFWlfxonWpzYRIO7TZK-JhtNuU0s")
# –î–∏—Å–ø–µ—Ç—á–µ—Ä –¥–ª—è –±–æ—Ç–∞
dp = Dispatcher(bot)
# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–∞–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
logging.basicConfig(level=logging.INFO)


# ////////////////////////Physic/////////////////////
@dp.message_handler(lambda message: '—Ñ–∏–∑' in message.text.lower() and '-' not in message.text.lower())
async def cmd_phys(message: types.Message):
    buttons = [
        types.InlineKeyboardButton(text="–§–∏–∑–∏–∫–∞-–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", callback_data='–§–∏–∑–∏–∫–∞-–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞'),
        types.InlineKeyboardButton(text="–§–∏–∑–∏–∫–∞-–•–∏–º–∏—è", callback_data='–§–∏–∑–∏–∫–∞-–•–∏–º–∏—è'),
    ]
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    keyboard.add(*buttons)
    await message.reply("–í—ã–±–µ—Ä–∏", reply_markup=keyboard)


# ////////////////////////Math/////////////////////
@dp.message_handler(lambda message: '–º–∞—Ç' in message.text.lower() and '-' not in message.text.lower())
async def cmd_math(message: types.Message):
    buttons = [
        types.InlineKeyboardButton(text="–§–∏–∑–∏–∫–∞-–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", callback_data='–§–∏–∑–∏–∫–∞-–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞'),
        types.InlineKeyboardButton(text="–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞-–ì–µ–æ–≥—Ä–∞—Ñ–∏—è", callback_data='–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞-–ì–µ–æ–≥—Ä–∞—Ñ–∏—è'),
    ]
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    keyboard.add(*buttons)
    await message.reply("–í—ã–±–µ—Ä–∏", reply_markup=keyboard)


# ////////////////////////Biology/////////////////////
@dp.message_handler(lambda message: '–±–∏–æ' in message.text.lower())
async def cmd_bio(message: types.Message):
    buttons = [
        types.InlineKeyboardButton(text="–ë–∏–æ–ª–æ–≥–∏—è-–ì–µ–æ–≥—Ä–∞—Ñ–∏—è", callback_data='–ë–∏–æ–ª–æ–≥–∏—è-–ì–µ–æ–≥—Ä–∞—Ñ–∏—è'),
        types.InlineKeyboardButton(text="–•–∏–º–∏—è-–ë–∏–æ–ª–æ–≥–∏—è", callback_data='–•–∏–º–∏—è-–ë–∏–æ–ª–æ–≥–∏—è'),
    ]
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    keyboard.add(*buttons)
    await message.reply("–í—ã–±–µ—Ä–∏", reply_markup=keyboard)


# ////////////////////////Chemistry/////////////////////
@dp.message_handler(lambda message: '—Ö–∏–º' in message.text.lower())
async def cmd_chem(message: types.Message):
    buttons = [
        types.InlineKeyboardButton(text="–•–∏–º–∏—è-–§–∏–∑–∏–∫–∞", callback_data='–•–∏–º–∏—è-–§–∏–∑–∏–∫–∞'),
        types.InlineKeyboardButton(text="–•–∏–º–∏—è-–ë–∏–æ–ª–æ–≥–∏—è", callback_data='–•–∏–º–∏—è-–ë–∏–æ–ª–æ–≥–∏—è'),
    ]
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    keyboard.add(*buttons)
    await message.reply("–í—ã–±–µ—Ä–∏", reply_markup=keyboard)


# ////////////////////////Geography/////////////////////
@dp.message_handler(lambda message: '–≥–µ–æ' in message.text.lower() and '-' not in message.text.lower())
async def cmd_geo(message: types.Message):
    buttons = [
        types.InlineKeyboardButton(text="–ë–∏–æ–ª–æ–≥–∏—è-–ì–µ–æ–≥—Ä–∞—Ñ–∏—è", callback_data='–ë–∏–æ–ª–æ–≥–∏—è-–ì–µ–æ–≥—Ä–∞—Ñ–∏—è'),
        types.InlineKeyboardButton(text="–ì–µ–æ–≥—Ä–∞—Ñ–∏—è-–í—Å–µ–º–∏—Ä–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è", callback_data='–ì–µ–æ–≥—Ä–∞—Ñ–∏—è-–ò—Å—Ç–æ—Ä–∏—è –º–∏—Ä–∞'),
        types.InlineKeyboardButton(text="–ì–µ–æ–≥—Ä–∞—Ñ–∏—è-–ê–Ω–≥–ª–∏–π—Å–∫–∏–π", callback_data='–ì–µ–æ–≥—Ä–∞—Ñ–∏—è-–ê–Ω–≥–ª–∏–π—Å–∫–∏–π'),
        types.InlineKeyboardButton(text="–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞-–ì–µ–æ–≥—Ä–∞—Ñ–∏—è", callback_data='–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞-–ì–µ–æ–≥—Ä–∞—Ñ–∏—è'),
    ]
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    keyboard.add(*buttons)
    await message.reply("–í—ã–±–µ—Ä–∏", reply_markup=keyboard)


# ////////////////////////History/////////////////////
@dp.message_handler(lambda message: '–∏—Å—Ç' in message.text.lower() or '—Ç–∞—Ä' in message.text.lower())
async def cmd_hist(message: types.Message):
    buttons = [
        types.InlineKeyboardButton(text="–ì–µ–æ–≥—Ä–∞—Ñ–∏—è-–í—Å–µ–º–∏—Ä–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è", callback_data='–ì–µ–æ–≥—Ä–∞—Ñ–∏—è-–í—Å–µ–º–∏—Ä–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è'),
        types.InlineKeyboardButton(text="–í—Å–µ–º–∏—Ä–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è-–ß–µ–ª–æ–≤–µ–∫.–û–±—â–µ—Å—Ç–≤–æ.–ü—Ä–∞–≤–æ",
                                   callback_data='–í—Å–µ–º–∏—Ä–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è-–ß–µ–ª–æ–≤–µ–∫.–û–±—â–µ—Å—Ç–≤–æ.–ü—Ä–∞–≤–æ')
    ]
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    keyboard.add(*buttons)
    await message.reply("–í—ã–±–µ—Ä–∏", reply_markup=keyboard)

#–î–æ–±–∞–≤—å –µ—â–µ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –∞ –∏–º–µ–Ω–Ω–æ:English,CH.O.P,KAZlanguage,KAZliterature,RUSlanguage,RUSliterature,creativeexam

# /////////////////Payment//////////////////
@dp.message_handler(Text(contains="–ø–ª–∞—Ç–∞", ignore_case=True))
async def cmd_payment(message: types.Message):
    await message.answer('<b>–ë–∏–æ–ª–æ–≥–∏—è-–ì–µ–æ–≥—Ä–∞—Ñ–∏—è</b>\n "–ü–µ–¥–∞–≥–æ–≥–∏–∫–∞ –∏ –ü—Å–∏—Ö–æ–ª–æ–≥–∏—è" - 443.400 —Ç–≥ –≤ –≥–æ–¥\n "',
                         parse_mode='html')


@dp.message_handler(commands="start")
async def cmd_start(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    buttons = ["üìö–ü—Ä–µ–¥–º–µ—Ç—ãüìö", "üí∞–û–ø–ª–∞—Ç–∞üí∞", "‚ùì–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å‚ùì", "üìã–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –≥—Ä–∞–Ω—Ç—ã –∏ —Å–∫–∏–¥–∫–∏üìã",
               "üè¢–ö–æ–ª–ª–µ–¥–∂ –ï–ù–¢ –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏üè¢", "üë®üèª‚Äçüéì–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –ú–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä—ãüë®üèª‚Äçüéì"]
    keyboard.add(*buttons)
    await message.answer("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ", reply_markup=keyboard)


@dp.message_handler(Text(contains="–ø—Ä–µ–¥–º–µ—Ç—ã", ignore_case=True))
async def cmd_items(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2,)
    buttons = ["–ë–∏–æ–ª–æ–≥–∏—è-–ì–µ–æ–≥—Ä–∞—Ñ–∏—è", "–ì–µ–æ–≥—Ä–∞—Ñ–∏—è-–í—Å–µ–º–∏—Ä–Ω–∞—è –ò—Å—Ç–æ—Ä–∏—è", "–ì–µ–æ–≥—Ä–∞—Ñ–∏—è-–ê–Ω–≥–ª–∏–π—Å–∫–∏–π",
               "–í—Å–µ–º–∏—Ä–Ω–∞—è –ò—Å—Ç–æ—Ä–∏—è-–ß–µ–ª–æ–≤–µ–∫.–û–±—â–µ—Å—Ç–≤–æ.–ü—Ä–∞–≤–æ", "–ö–∞–∑–∞—Ö—Å–∫–∏–π –Ø–∑—ã–∫-–ö–∞–∑–∞—Ö—Å–∫–∞—è –õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞", "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞-–§–∏–∑–∏–∫–∞",
               "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞-–ì–µ–æ–≥—Ä–∞—Ñ–∏—è", "–†—É—Å—Å–∫–∏–π –Ø–∑—ã–∫-–†—É—Å—Å–∫–∞—è –õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞", "–•–∏–º–∏—è-–ë–∏–æ–ª–æ–≥–∏—è",
               "–•–∏–º–∏—è-–§–∏–∑–∏–∫–∞", "–ê–Ω–≥–ª–∏–π—Å–∫–∏–π –Ø–∑—ã–∫-–í—Å–µ–º–∏—Ä–Ω–∞—è –ò—Å—Ç–æ—Ä–∏—è", "–¢–≤–æ—Ä—á–µ—Å–∫–∏–π —ç–∫–∑–∞–º–µ–Ω", "üîÑ–ù–∞–∑–∞–¥üîÑ"]
    keyboard.add(*buttons)
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–∏ –ø—Ä–µ–¥–º–µ—Ç—ã", reply_markup=keyboard)

@dp.message_handler(Text(contains="–Ω–∞–∑–∞–¥", ignore_case=True))
async def cmd_back(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    buttons = ["üìö–ü—Ä–µ–¥–º–µ—Ç—ãüìö", "üí∞–û–ø–ª–∞—Ç–∞üí∞", "‚ùì–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å‚ùì", "üìã–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –≥—Ä–∞–Ω—Ç—ã –∏ —Å–∫–∏–¥–∫–∏üìã",
               "üè¢–ö–æ–ª–ª–µ–¥–∂ –ï–ù–¢ –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏üè¢", "üë®üèª‚Äçüéì–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –ú–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä—ãüë®üèª‚Äçüéì"]
    keyboard.add(*buttons)
    await message.answer("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ", reply_markup=keyboard)


def request(message, year):
    cur.execute(f"SELECT groups.nomer, groups.name, year_{year}.grant, year_{year}.jk, year_{year}.ak FROM groups JOIN year_{year} ON groups.nomer = year_{year}.group_nomer WHERE groups.subject = '{message}' ORDER BY groups.nomer ASC;")
    data_groups = cur.fetchall()
    cur.execute(f"SELECT spec.group_nomer, spec.name FROM spec JOIN groups ON groups.nomer = spec.group_nomer WHERE subject = '{message}' ORDER BY spec.group_nomer ASC;")
    data_spec = cur.fetchall()
    cur.execute("SELECT name FROM sqlite_master WHERE type='table' AND name > 'year_';")
    tables = cur.fetchall()
    text = ''
    for group in data_groups:
        group = list(group)
        text = text + f"<{group[1]}>\n"
        for spec in data_spec:
            spec = list(spec)
            if spec[0] == group[0]:
                text = text + "-" + spec[1] + "-\n"  #–ø–æ–¥—É–º–∞–π
        text = text + f"–ë–∞–∫–∞–ª–∞–≤—Ä–∏–∞—Ç“õ–∞ –±”©–ª—ñ–Ω–≥–µ–Ω –≥—Ä–∞–Ω—Ç —Å–∞–Ω—ã:{group[2]}\n–ñ–∞–ª–ø—ã –∫–æ–Ω–∫—É—Ä—Å –±–æ–π—ã–Ω—à–∞ –≥—Ä–∞–Ω—Ç“õ–∞ —Ç“Ø—Å–∫–µ–Ω –º–∏–Ω–∏–º–∞–ª–¥—ã –±–∞–ª–ª:{group[3]}\n–ê—É—ã–ª–¥—ã“õ –∫–≤–æ—Ç–∞–º–µ–Ω –≥—Ä–∞–Ω—Ç“õ–∞ —Ç“Ø—Å–∫–µ–Ω –º–∏–Ω–∏–º–∞–ª–¥—ã –±–∞–ª–ª:{group[4]}\n\n"
    return text,tables

@dp.callback_query_handler()
@dp.message_handler(lambda message: message.text in ["–ë–∏–æ–ª–æ–≥–∏—è-–ì–µ–æ–≥—Ä–∞—Ñ–∏—è", "–ì–µ–æ–≥—Ä–∞—Ñ–∏—è-–í—Å–µ–º–∏—Ä–Ω–∞—è –ò—Å—Ç–æ—Ä–∏—è", "–ì–µ–æ–≥—Ä–∞—Ñ–∏—è-–ê–Ω–≥–ª–∏–π—Å–∫–∏–π",
               "–í—Å–µ–º–∏—Ä–Ω–∞—è –ò—Å—Ç–æ—Ä–∏—è-–ß–µ–ª–æ–≤–µ–∫.–û–±—â–µ—Å—Ç–≤–æ.–ü—Ä–∞–≤–æ", "–ö–∞–∑–∞—Ö—Å–∫–∏–π –Ø–∑—ã–∫-–ö–∞–∑–∞—Ö—Å–∫–∞—è –õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞", "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞-–§–∏–∑–∏–∫–∞",
               "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞-–ì–µ–æ–≥—Ä–∞—Ñ–∏—è", "–†—É—Å—Å–∫–∏–π –Ø–∑—ã–∫-–†—É—Å—Å–∫–∞—è –õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞", "–•–∏–º–∏—è-–ë–∏–æ–ª–æ–≥–∏—è",
               "–•–∏–º–∏—è-–§–∏–∑–∏–∫–∞", "–ê–Ω–≥–ª–∏–π—Å–∫–∏–π –Ø–∑—ã–∫-–í—Å–µ–º–∏—Ä–Ω–∞—è –ò—Å—Ç–æ—Ä–∏—è", "–¢–≤–æ—Ä—á–µ—Å–∫–∏–π —ç–∫–∑–∞–º–µ–Ω"])
async def from_bd_balls(subject: types.message, year = None):
    if not year:
        year = int(str(subject.date)[:4]) - 1
    data = request(subject.text, year)
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    buttons = []
    for year in data[1]:
        buttons.append(types.InlineKeyboardButton(text=f"{str(year[0])[5:]} –≥–æ–¥", callback_data=subject.text + ' ' + year[0]))
    keyboard.add(*buttons)
    await subject.answer(data[0],reply_markup=keyboard)

@dp.callback_query_handler(Text(contains='year_'))
async def year(call: types.CallbackQuery):
    data = call.data.split(' ')
    data[1] = int(str(data[1])[5:])
    await from_bd_balls(data[0],data[1])

if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    executor.start_polling(dp, skip_updates=True)









#{"id":"4680207043138230388","from":{"id":1089695618,"is_bot":false,"first_name":"Zhako","language_code":"en"},"message":{"message_id":307,"from":{"id":5322427961,"is_bot":true,"first_name":"Idk","username":"Korkyt_assintant_bot"},"chat":{"id":1089695618,"first_name":"Zhako","type":"private"},"date":1654155682,"text":"tyu","reply_markup":{"inline_keyboard":[[{"text":"2020 –≥–æ–¥","callback_data":"hi"}],[{"text":"2021 –≥–æ–¥","callback_data":"hi"}]]}},"chat_instance":"-8721534746082330406","data":"hi"}